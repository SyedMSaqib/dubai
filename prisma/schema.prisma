generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tours {
  id       String      @id @default(uuid())
  name     String
  image    TourImages? // A tour can have one image
  subTours SubTours[] // A tour can have many sub-tours
}

model TourImages {
  id        String   @id @default(uuid()) // Unique identifier
  src       String // URL of the image
  altText   String? // Optional alt text for accessibility
  tour      Tours    @relation(fields: [tourId], references: [id]) // Reference to the tour
  tourId    String   @unique // Foreign key to the Tours model
  createdAt DateTime @default(now()) // Timestamp for when the image was added
  updatedAt DateTime @updatedAt // Timestamp for the last update
}

model SubTours {
  id     String          @id @default(uuid())
  name   String
  tour   Tours           @relation(fields: [tourId], references: [id]) // Each sub-tour belongs to one tour
  tourId String // Foreign key to Tours
  images SubTourImages[] // A sub-tour can have many images
}

model SubTourImages {
  id        String   @id @default(uuid()) // Unique identifier
  src       String // URL of the image
  altText   String? // Optional alt text for accessibility
  subTour   SubTours @relation(fields: [subTourId], references: [id]) // Reference to the sub-tour
  subTourId String // Foreign key to the SubTours model
  createdAt DateTime @default(now()) // Timestamp for when the image was added
  updatedAt DateTime @updatedAt // Timestamp for the last update
}
